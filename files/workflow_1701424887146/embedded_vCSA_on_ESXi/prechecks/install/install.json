{
  "py/object": "cli_tasks.precheck.taskflow.install.InstallPrecheckTaskFlow",
  "py/state": {
    "graph": {},
    "_node": {
      "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {},
      "<TargetApplianceTypeTask - com.vmware.vcsa.installer.prechecks.target_appliance_type(SUCCEEDED)>": {},
      "<ApplianceNameTask - com.vmware.vcsa.installer.prechecks.appliance_name(SUCCEEDED)>": {},
      "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {},
      "<HostConfigsTask - com.vmware.vcsa.installer.prechecks.host_configs(SUCCEEDED)>": {},
      "<ESXManagementStatusTask - com.vmware.vcsa.installer.prechecks.esx_management_status(SUCCEEDED)>": {},
      "<TargetVersionTask - com.vmware.vcsa.installer.prechecks.target_version(SUCCEEDED)>": {},
      "<OVAPropertiesTask - com.vmware.vcsa.installer.prechecks.ova_properties(SUCCEEDED)>": {},
      "<IpFqdnInUseTask - com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use(SUCCEEDED)>": {},
      "<LinkingTargetHostnameValidationTask - com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation(SUCCEEDED)>": {},
      "<DNSResolveTask - com.vmware.vcsa.installer.prechecks.dns_resolve_task(SUCCEEDED)>": {},
      "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {},
      "<SSOCredentialsTask - com.vmware.vcsa.installer.prechecks.sso_credentials(SUCCEEDED)>": {},
      "<SSOExternalTask - com.vmware.vcsa.installer.prechecks.sso_external(SUCCEEDED)>": {},
      "<VSANBootstrapTask - com.vmware.vcsa.installer.precheck.vsan_bootstrap(SUCCEEDED)>": {},
      "<VSANClusterHealthTask - com.vmware.vcsa.installer.precheck.vsan_cluster_health(SUCCEEDED)>": {},
      "<VLCMClusterTask - com.vmware.vcsa.installer.precheck.vlcm_cluster(SUCCEEDED)>": {}
    },
    "_adj": {
      "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {
        "<TargetApplianceTypeTask - com.vmware.vcsa.installer.prechecks.target_appliance_type(SUCCEEDED)>": {},
        "<ApplianceNameTask - com.vmware.vcsa.installer.prechecks.appliance_name(SUCCEEDED)>": {},
        "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {},
        "<HostConfigsTask - com.vmware.vcsa.installer.prechecks.host_configs(SUCCEEDED)>": {}
      },
      "<TargetApplianceTypeTask - com.vmware.vcsa.installer.prechecks.target_appliance_type(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {}
      },
      "<ApplianceNameTask - com.vmware.vcsa.installer.prechecks.appliance_name(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {}
      },
      "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {
        "<ESXManagementStatusTask - com.vmware.vcsa.installer.prechecks.esx_management_status(SUCCEEDED)>": {},
        "<TargetVersionTask - com.vmware.vcsa.installer.prechecks.target_version(SUCCEEDED)>": {}
      },
      "<HostConfigsTask - com.vmware.vcsa.installer.prechecks.host_configs(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {}
      },
      "<ESXManagementStatusTask - com.vmware.vcsa.installer.prechecks.esx_management_status(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {}
      },
      "<TargetVersionTask - com.vmware.vcsa.installer.prechecks.target_version(SUCCEEDED)>": {
        "<OVAPropertiesTask - com.vmware.vcsa.installer.prechecks.ova_properties(SUCCEEDED)>": {}
      },
      "<OVAPropertiesTask - com.vmware.vcsa.installer.prechecks.ova_properties(SUCCEEDED)>": {
        "<IpFqdnInUseTask - com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use(SUCCEEDED)>": {}
      },
      "<IpFqdnInUseTask - com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use(SUCCEEDED)>": {
        "<LinkingTargetHostnameValidationTask - com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation(SUCCEEDED)>": {}
      },
      "<LinkingTargetHostnameValidationTask - com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation(SUCCEEDED)>": {
        "<DNSResolveTask - com.vmware.vcsa.installer.prechecks.dns_resolve_task(SUCCEEDED)>": {}
      },
      "<DNSResolveTask - com.vmware.vcsa.installer.prechecks.dns_resolve_task(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {}
      },
      "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {
        "<SSOCredentialsTask - com.vmware.vcsa.installer.prechecks.sso_credentials(SUCCEEDED)>": {}
      },
      "<SSOCredentialsTask - com.vmware.vcsa.installer.prechecks.sso_credentials(SUCCEEDED)>": {
        "<SSOExternalTask - com.vmware.vcsa.installer.prechecks.sso_external(SUCCEEDED)>": {}
      },
      "<SSOExternalTask - com.vmware.vcsa.installer.prechecks.sso_external(SUCCEEDED)>": {
        "<VSANBootstrapTask - com.vmware.vcsa.installer.precheck.vsan_bootstrap(SUCCEEDED)>": {}
      },
      "<VSANBootstrapTask - com.vmware.vcsa.installer.precheck.vsan_bootstrap(SUCCEEDED)>": {
        "<VSANClusterHealthTask - com.vmware.vcsa.installer.precheck.vsan_cluster_health(SUCCEEDED)>": {}
      },
      "<VSANClusterHealthTask - com.vmware.vcsa.installer.precheck.vsan_cluster_health(SUCCEEDED)>": {
        "<VLCMClusterTask - com.vmware.vcsa.installer.precheck.vlcm_cluster(SUCCEEDED)>": {}
      },
      "<VLCMClusterTask - com.vmware.vcsa.installer.precheck.vlcm_cluster(SUCCEEDED)>": {}
    },
    "_succ": {
      "py/id": 21
    },
    "_pred": {
      "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {},
      "<TargetApplianceTypeTask - com.vmware.vcsa.installer.prechecks.target_appliance_type(SUCCEEDED)>": {
        "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {
          "py/id": 23
        }
      },
      "<ApplianceNameTask - com.vmware.vcsa.installer.prechecks.appliance_name(SUCCEEDED)>": {
        "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {
          "py/id": 24
        }
      },
      "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {
        "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {
          "py/id": 25
        }
      },
      "<HostConfigsTask - com.vmware.vcsa.installer.prechecks.host_configs(SUCCEEDED)>": {
        "<TargetCredentialsTask - com.vmware.vcsa.installer.prechecks.target_credentials(SUCCEEDED)>": {
          "py/id": 26
        }
      },
      "<ESXManagementStatusTask - com.vmware.vcsa.installer.prechecks.esx_management_status(SUCCEEDED)>": {
        "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {
          "py/id": 32
        }
      },
      "<TargetVersionTask - com.vmware.vcsa.installer.prechecks.target_version(SUCCEEDED)>": {
        "<TargetHostTypeTask - com.vmware.vcsa.installer.prechecks.target_host_type(SUCCEEDED)>": {
          "py/id": 33
        }
      },
      "<OVAPropertiesTask - com.vmware.vcsa.installer.prechecks.ova_properties(SUCCEEDED)>": {
        "<TargetVersionTask - com.vmware.vcsa.installer.prechecks.target_version(SUCCEEDED)>": {
          "py/id": 39
        }
      },
      "<IpFqdnInUseTask - com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use(SUCCEEDED)>": {
        "<OVAPropertiesTask - com.vmware.vcsa.installer.prechecks.ova_properties(SUCCEEDED)>": {
          "py/id": 41
        }
      },
      "<LinkingTargetHostnameValidationTask - com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation(SUCCEEDED)>": {
        "<IpFqdnInUseTask - com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use(SUCCEEDED)>": {
          "py/id": 43
        }
      },
      "<DNSResolveTask - com.vmware.vcsa.installer.prechecks.dns_resolve_task(SUCCEEDED)>": {
        "<LinkingTargetHostnameValidationTask - com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation(SUCCEEDED)>": {
          "py/id": 45
        }
      },
      "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {
        "<HostConfigsTask - com.vmware.vcsa.installer.prechecks.host_configs(SUCCEEDED)>": {
          "py/id": 35
        },
        "<DNSResolveTask - com.vmware.vcsa.installer.prechecks.dns_resolve_task(SUCCEEDED)>": {
          "py/id": 47
        },
        "<ESXManagementStatusTask - com.vmware.vcsa.installer.prechecks.esx_management_status(SUCCEEDED)>": {
          "py/id": 37
        },
        "<TargetApplianceTypeTask - com.vmware.vcsa.installer.prechecks.target_appliance_type(SUCCEEDED)>": {
          "py/id": 28
        },
        "<ApplianceNameTask - com.vmware.vcsa.installer.prechecks.appliance_name(SUCCEEDED)>": {
          "py/id": 30
        }
      },
      "<SSOCredentialsTask - com.vmware.vcsa.installer.prechecks.sso_credentials(SUCCEEDED)>": {
        "<TargetDsFreespaceTask - com.vmware.vcsa.installer.prechecks.target_ds_freespace(SUCCEEDED)>": {
          "py/id": 49
        }
      },
      "<SSOExternalTask - com.vmware.vcsa.installer.prechecks.sso_external(SUCCEEDED)>": {
        "<SSOCredentialsTask - com.vmware.vcsa.installer.prechecks.sso_credentials(SUCCEEDED)>": {
          "py/id": 51
        }
      },
      "<VSANBootstrapTask - com.vmware.vcsa.installer.precheck.vsan_bootstrap(SUCCEEDED)>": {
        "<SSOExternalTask - com.vmware.vcsa.installer.prechecks.sso_external(SUCCEEDED)>": {
          "py/id": 53
        }
      },
      "<VSANClusterHealthTask - com.vmware.vcsa.installer.precheck.vsan_cluster_health(SUCCEEDED)>": {
        "<VSANBootstrapTask - com.vmware.vcsa.installer.precheck.vsan_bootstrap(SUCCEEDED)>": {
          "py/id": 55
        }
      },
      "<VLCMClusterTask - com.vmware.vcsa.installer.precheck.vlcm_cluster(SUCCEEDED)>": {
        "<VSANClusterHealthTask - com.vmware.vcsa.installer.precheck.vsan_cluster_health(SUCCEEDED)>": {
          "py/id": 57
        }
      }
    },
    "observers": [],
    "status": {
      "py/reduce": [
        {
          "py/type": "tasking.utils.executable.Status"
        },
        {
          "py/tuple": [
            4
          ]
        }
      ]
    },
    "execute_retried": 0,
    "rollback_retried": 0,
    "execute_retry": 0,
    "rollback_retry": 0,
    "ignore_if_failed": false,
    "identifier": "com.vmware.vcsa.installer.prechecks.install-a2232d06-c51c-4e6f-8141-79979fe7fcfd",
    "summary": "",
    "description": "Install Prechecks",
    "_definition": [
      {
        "py/tuple": [
          {
            "py/object": "cli_tasks.precheck.tasks.target_credentials.TargetCredentialsTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.target_credentials",
              "summary": "Running precheck: TargetCredentials",
              "description": "Verify that the provided credentials for the target ESXi/VC are valid",
              "blackboard": {
                "py/object": "tasking.utils.blackboard.Blackboard",
                "py/state": {
                  "data": {
                    "template_newvc_sso_first_instance": true,
                    "template_newvc_sso_platform_service_controller": null,
                    "template_newvc_sso_replication_partner_hostname": null,
                    "template_newvc_sso_sso_port": 443,
                    "template_newvc_sso_site_name": null,
                    "template_newvc_sso_cert_thumbprint": null,
                    "template_skip_sso_cert_verification": false,
                    "template_sourcevc_ad_domain": null,
                    "template_sourcevc_ad_username": null,
                    "template_sourcevc_ad_password": null,
                    "template_ad_ou": null,
                    "template_newvc_network_ip_family": "ipv4",
                    "template_newvc_network_mode": "static",
                    "template_newvc_network_ip": "10.33.0.47",
                    "template_newvc_network_prefix": "24",
                    "template_newvc_network_gateway": "10.33.0.254",
                    "template_newvc_network_ports": null,
                    "template_newvc_network_dns_servers": "10.33.15.1,10.33.15.2",
                    "template_newvc_network_system_name": "ce01vcsa01.dev.deu.local",
                    "template_newvc_os_ntp_servers": "10.32.10.1,10.32.10.2",
                    "template_newvc_os_time_tools_sync": null,
                    "precheck_task_duration": null,
                    "appliance_deployment_task_duration": null,
                    "rpm_deployment_task_duration": null,
                    "firstboot_task_duration": null,
                    "skip_first_instance_sso_prechecks": false,
                    "stage_deployment_failed": null,
                    "new_vc_target_path": null,
                    "deployment_jumphost_os": "macOS-14.0-arm64-arm-64bit",
                    "jumphost_os_release": "23.0.0",
                    "template_newvc_vcsa_cluster": null,
                    "template_newvc_cluster": null,
                    "template_newvc_compression_only": null,
                    "template_newvc_datacenter": null,
                    "template_newvc_deduplication_and_compression": null,
                    "template_newvc_disk_for_vsa_cache_disk": null,
                    "template_newvc_disk_for_vsa_capacity_disk": null,
                    "template_newvc_enable_vlcm": null,
                    "template_newvc_seedhost_version": null,
                    "template_newvc_enable_vsan_esa": null,
                    "template_newvc_disks_for_single_tier": null,
                    "template_newvc_vsan_hcl_database_path": null,
                    "template_newvc_download_vsan_hcl_database_duration": null,
                    "template_newvc_upload_vsan_hcl_database_duration": null,
                    "template_newvc_health_check_duration": null,
                    "template_config": {
                      "skip_ssl_certificate_verification": true,
                      "_load_ova": true,
                      "_schema": {
                        "__version": "2.13.0",
                        "new_vcsa": {
                          "__comments": "This section describes the appliance that you want to deploy.",
                          "appliance": {
                            "__comments": "The deployment option below affects the vCenter Server Appliance's configuration parameters, such as the vCenter Server Appliance's number of vCPUs, the memory size, the storage size, and the maximum numbers of ESXi hosts and VMs which the vCenter Server Appliance can manage. For a list of acceptable values, run the supported deployment sizes help, i.e. vcsa-deploy --supported-deployment-sizes",
                            "deployment_option": {
                              "required": true,
                              "type": {
                                "py/type": "config_parser.DeploymentOptionEnum"
                              },
                              "validate": {
                                "py/function": "config_parser.validate_deployment_option"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "appliance",
                                    "image"
                                  ]
                                },
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "appliance",
                                    "image_url_ssl_certificate_verification"
                                  ]
                                }
                              ],
                              "__comments": "The type of appliance to deploy."
                            },
                            "name": {
                              "required": true,
                              "__comments": "The name of the appliance to deploy."
                            },
                            "thin_disk_mode": {
                              "required": false,
                              "type": {
                                "py/type": "builtins.bool"
                              },
                              "__comments": "To deploy the appliance with thin mode virtual disks, set the value to 'true'."
                            },
                            "image": {
                              "required": false,
                              "validate": {
                                "py/function": "cli_ova.ova_validator.validate_ova_path"
                              },
                              "validate_args": [
                                "is_default",
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "appliance",
                                    "image_url_ssl_certificate_verification"
                                  ]
                                }
                              ],
                              "__comments": "A local file path or URL to the vCenter Server Appliance 8.0.2.00000 installation package. The source is included in the installer ISO file."
                            },
                            "image_url_ssl_certificate_verification": {
                              "validate": {
                                "py/function": "config_parser._validate_cert_verification_settings"
                              },
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
                            },
                            "ovftool_path": {
                              "required": false,
                              "default": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
                              "validate": {
                                "py/function": "config_parser.validate_ovftool_path"
                              },
                              "validate_args": [
                                "is_default"
                              ],
                              "__comments": "A local file path to OVF Tool executable file."
                            }
                          },
                          "os": {
                            "__comments": "This subsection describes the operating system configurations for the new appliance.",
                            "ssh_enable": {
                              "required": false,
                              "type": {
                                "py/type": "builtins.bool"
                              },
                              "ovf-prop": "guestinfo.cis.appliance.ssh.enabled",
                              "__comments": "To enable the SSH administrator login option of the appliance, set the value to 'true'. You can change this setting after deployment."
                            },
                            "password": {
                              "required": true,
                              "ovf-prop": "guestinfo.cis.appliance.root.passwd",
                              "__comments": "Password of the root user of the Linux operating system of the appliance. \nPassword must conform to the following requirements:\n    At least 8 characters\n    No more than 20 characters\n    At least 1 uppercase character\n    At least 1 lowercase character\n    At least 1 number\n    At least 1 special character (e.g., '!', '(', '@', etc.)\n    Only visible A-Z, a-z, 0-9 and punctuation (spaces are not allowed)\n",
                              "password": true
                            },
                            "time_tools_sync": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "os",
                                    null
                                  ]
                                }
                              ],
                              "type": {
                                "py/type": "builtins.bool"
                              },
                              "ovf-prop": "guestinfo.cis.appliance.time.tools-sync",
                              "__comments": "Required, unless \"ntp_servers\" is provided. To enable the VMware Tools time synchronization option of the appliance, set the value to 'true'. VMware Tools synchronizes the time of the appliance with the time of the ESXi host."
                            },
                            "ntp_servers": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "os",
                                    null
                                  ]
                                }
                              ],
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "normalize": {
                                "py/function": "config_parser.serialize_array_string"
                              },
                              "validate": {
                                "py/function": "install.validate_ntp"
                              },
                              "ovf-prop": "guestinfo.cis.appliance.ntp.servers",
                              "__comments": "Required, unless \"time_tools_sync\" is provided. To configure NTP time synchronization for the appliance, set the value to a comma-separated list of host names or IP addresses of Network Time Protocol (NTP) servers. Can be a JSON array such as [\"ntp1.com\", \"ntp2.com\"] or a serialized string such as \"ntp1.com,ntp2.com\"."
                            }
                          },
                          "esxi": {
                            "__comments": "This subsection describes the ESXi host on which to deploy the appliance. Required if you are deploying the appliance directly on an ESXi host. Fill in either this subsection or the 'vc' subsection.",
                            "hostname": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "validate": {
                                "py/function": "config_parser._validate_esxi_hostname"
                              },
                              "__comments": "The IP address or fully qualified domain name (FQDN) of the ESXi host. If an FQDN is provided, it has to be resolvable from the machine that is running the installer."
                            },
                            "ssl_certificate_verification": {
                              "validate": {
                                "py/function": "config_parser._validate_cert_verification_settings"
                              },
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
                            },
                            "port": {
                              "required": false,
                              "type": {
                                "py/type": "builtins.int"
                              },
                              "__comments": {
                                "py/tuple": [
                                  "The port number of the ESXi host. The default value is %s.",
                                  443
                                ]
                              }
                            },
                            "datastore": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": {
                                "py/tuple": [
                                  "The datastore on which to store the files of the appliance. This value has to be either a specific datastore name, or a specific datastore in a datastore cluster. The datastore must be accessible from the ESXi host and must have at least %s GB of free space. Otherwise, the new appliance might not power on.",
                                  25
                                ]
                              }
                            },
                            "username": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": "The user name of a user with administrative privileges on the ESXi host."
                            },
                            "password": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": "The password of the ESXi host user. If left blank, or omitted, you will be prompted to enter it at the command console during template verification.",
                              "password": true
                            },
                            "deployment_network": {
                              "required": false,
                              "__comments": "The network of the ESXi host to which to connect the new appliance. When the ESXi host has one network, you can omit this parameter."
                            },
                            "target": {
                              "required": false,
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "__comments": "Optional for the \"esxi\" section. When deploying to a resource pool, this is the path to the resource pool on the ESXi host where the appliance will be deployed. Be sure to include the \"Resources\" item. For example, \"target\": [\"Resources\", \"My Resource Pool\"]. Nested resouce pools may also be specified.  For example, \"target\": [\"Resources\", \"Parent Pool\", \"Child Pool\"]. All names are case-sensitive. Note that prechecks only verify the memory of the resource pool."
                            },
                            "VCSA_cluster": {
                              "__comments": "This subsection describes the settings for the vSAN or vLCM managed cluster. Required only if you want to create a vSAN or vLCM managed cluster during the deployment of vCenter Server. ",
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "datacenter": {
                                "type": {
                                  "py/type": "builtins.str"
                                },
                                "__comments": "Datacenter where you want to deploy the vCenter Server."
                              },
                              "cluster": {
                                "type": {
                                  "py/type": "builtins.str"
                                },
                                "__comments": "The vSAN or the vLCM managed cluster you want to create just after the vCenter Server deployment."
                              },
                              "compression_only": {
                                "type": {
                                  "py/type": "builtins.bool"
                                },
                                "validate": {
                                  "py/function": "config_parser._validate_vcsa_cluster_compression"
                                },
                                "validate_args": [
                                  {
                                    "py/tuple": [
                                      "new_vcsa",
                                      "exsi",
                                      "VCSA_cluster",
                                      "deduplication_and_compression"
                                    ]
                                  }
                                ],
                                "__comments": "Set the value to 'true' to enable compression on the vSAN cluster. If this parameter is set to 'true', the 'deduplication_and_compression' parameter must be set to 'false'."
                              },
                              "deduplication_and_compression": {
                                "type": {
                                  "py/type": "builtins.bool"
                                },
                                "__comments": "Set the value to 'true' to enable compression and deduplication on the vSAN cluster.  If this parameter is set to 'true', the 'compression_only' parameter must be set to 'false'."
                              },
                              "disks_for_vsan": {
                                "__comments": "This section describes vSAN disk settings.",
                                "cache_disk": {
                                  "__comments": "A list of UUIDs or canonical names of disks you want to use for cache. Specify only SSDs.",
                                  "type": {
                                    "py/type": "builtins.list"
                                  }
                                },
                                "capacity_disk": {
                                  "__comments": "A list of UUIDs or canonical names of disks you want to use for storage. Specify either SSDs or HDDs.",
                                  "type": {
                                    "py/type": "builtins.list"
                                  }
                                }
                              },
                              "enable_vlcm": {
                                "type": {
                                  "py/type": "builtins.bool"
                                },
                                "__comments": "Set to 'true' to create a vLCM managed cluster."
                              },
                              "enable_vsan_esa": {
                                "type": {
                                  "py/type": "builtins.bool"
                                },
                                "__comments": "Set to 'true' to create vSAN cluster with vSAN ESA. vSAN Express Storage Architecture is a next-generation architecture designed to get the most out of high-performance storage devices, resulting in greater performance and efficiency."
                              },
                              "storage_pool": {
                                "__comments": "This section describes vSAN ESA disk settings.",
                                "single_tier": {
                                  "__comments": "List of disk UUIDs or canonical names to be added to a vSAN storage pool as vSAN single tier devices.",
                                  "type": {
                                    "py/type": "builtins.list"
                                  }
                                }
                              },
                              "vsan_hcl_database_path": {
                                "type": {
                                  "py/type": "builtins.str"
                                },
                                "__comments": "Local path to the vSAN HCL database. If the vSAN HCL database present in this location is not up-to-date, the installer will download the latest version of the database and replace it with the older version."
                              }
                            }
                          },
                          "vc": {
                            "__comments": "This subsection describes the vCenter Server instance on which to deploy the appliance. Required if you are deploying the appliance on an ESXi host or DRS cluster from a vCenter Server inventory. Fill in either this subsection or the 'esxi' subsection.",
                            "hostname": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "validate": {
                                "py/function": "config_parser._validate_vc_hostname"
                              },
                              "__comments": "The IP address or fully qualified domain name (FQDN) of the vCenter Server instance. If an FQDN is provided, it has to be resolvable from the machine that is running the installer."
                            },
                            "ssl_certificate_verification": {
                              "validate": {
                                "py/function": "config_parser._validate_cert_verification_settings"
                              },
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
                            },
                            "port": {
                              "required": false,
                              "type": {
                                "py/type": "builtins.int"
                              },
                              "__comments": {
                                "py/tuple": [
                                  "The port number of the vCenter Server instance. The default value is %s.",
                                  443
                                ]
                              }
                            },
                            "username": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": "The user name of a user with administrative privileges or the Single Sign-On administrator on vCenter."
                            },
                            "password": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": "The password of a user with administrative privileges or the Single Sign-On administrator on vCenter. If left blank, or omitted, you will be prompted to enter it at the command console during template verification.",
                              "password": true
                            },
                            "deployment_network": {
                              "required": false,
                              "__comments": "The network of the ESXi host to which to connect the new appliance. When the ESXi host has one network, you can omit this parameter."
                            },
                            "datacenter": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "__comments": "The path to the datacenter. This path must end with the datacenter's name. If the datacenter has any parent folders, the parent folder names must also be in the path. Parent folders are optional. All names are case-sensitive. Example: \"datacenter\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My Datacenter\"]."
                            },
                            "target": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "__comments": "The path to a specific cluster, ESXi host, or resource pool under the datacenter specified in the template key \"datacenter\" above. This is where you want to deploy the appliance. This path must end with a cluster name, a ESXi hostname, or a resource pool name. Parent folders are optional. All names are case-sensitive. Examples: For the hierachy 'Parent Folder 1\\Parent Folder 2\\My ESXi', you must specify \"target\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My ESXi\"]. For the hierarchy 'Parent Folder 1\\Parent Folder 2\\My DRS Cluster', you must specify \"target\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My DRS Cluster\"]. If deploying to a resource pool, you must include the item \"Resources\" before the resource pool name. For example, if cluster \"My Cluster\" contains resource pool \"My Resource Pool\", you must specify \"target\": [\"My Cluster\", \"Resources\", \"My Resource Pool\"]. ESXi, cluster, and resource pool names must be the same as the names recorded in the vCenter inventory, i.e. if the name in the vCenter inventory is an IP address, the FQDN cannot be provided here, and vice versa. Use the template key 'vm_folder' if you want the deployed appliance to be listed in a different location within the data center's hierarchy.  Note that prechecks only verify the memory of the resource pool."
                            },
                            "datastore": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "__comments": {
                                "py/tuple": [
                                  "The datastore on which to store the files of the appliance. This value has to be either a specific datastore name, or a specific datastore in a datastore cluster. The datastore must be accessible from the vCenter Server data center and must have at least %s GB of free space. Otherwise, the new appliance might not power on.",
                                  25
                                ]
                              }
                            },
                            "vm_folder": {
                              "required": false,
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "__comments": "A VM folder in the vCenter Server data center to which to add the appliance."
                            }
                          },
                          "ovftool_arguments": {
                            "__comments": "Use this subsection to add arbitrary arguments to the OVF Tool command that the script generates. You do not need to fill it out in most circumstances.",
                            "*": {
                              "required": false,
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.bool"
                                }
                              ],
                              "__comments": "Values entered for these keys are passed to OVF Tool without any verification of compatibility with other generated arguments as '--key=value'. Keys that are not arguments recognized by OVF Tool will cause the script to fail.",
                              "__title": "<OVF Tool argument name>"
                            }
                          },
                          "sso": {
                            "__comments": "Single Sign-On options",
                            "password": {
                              "required": true,
                              "ovf-prop": "guestinfo.cis.vmdir.password",
                              "__comments": "You must set the administrator account password for the Embedded Platform Services Controller  instance added to a vCenter Single Sign-On domain. When you add other Embedded PSC instances to the domain, you must provide the password of the  first Embedded PSC instance. The first Embedded PSC instance becomes the replication partner for all subsequent Embedded PSC instances added to the domain. \nPassword must conform to the following requirements:\n    At least 8 characters\n    No more than 20 characters\n    At least 1 uppercase character\n    At least 1 lowercase character\n    At least 1 number\n    At least 1 special character (e.g., '!', '(', '@', etc.)\n    Only visible A-Z, a-z, 0-9 and punctuation (spaces are not allowed)\n",
                              "password": true
                            },
                            "replication_partner_hostname": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "sso",
                                    "first_instance"
                                  ]
                                }
                              ],
                              "validate": {
                                "py/function": "install.validate_replication_partner_hostname"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "sso",
                                    "first_instance"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.vmdir.replication-partner-hostname",
                              "__comments": "The IP address or fully qualified domain name (FQDN) of the Embedded Platform Services Controller replication partner. Ignored, if this instance is the first instance of the identity domain."
                            },
                            "sso_port": {
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "sso",
                                    null
                                  ]
                                }
                              ],
                              "type": {
                                "py/type": "builtins.int"
                              },
                              "default": 443,
                              "__comments": {
                                "py/tuple": [
                                  "The SSO port number of an Embedded Platform Services Controller (PSC), defaulting to %s. If your first_instance PSC has changed its SSO port number, you can override the default value with that custom port number.",
                                  443
                                ]
                              }
                            },
                            "ssl_certificate_verification": {
                              "validate": {
                                "py/function": "config_parser._validate_cert_verification_settings"
                              },
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
                            },
                            "domain_name": {
                              "required": true,
                              "validate": {
                                "py/function": "config_parser.validate_sso_domain"
                              },
                              "default": "vsphere.local",
                              "ovf-prop": "guestinfo.cis.vmdir.domain-name",
                              "__comments": "vCenter Single Sign-On domain name, for example \"vsphere.local\"."
                            },
                            "first_instance": {
                              "required": false,
                              "type": {
                                "py/type": "builtins.bool"
                              },
                              "default": true,
                              "ovf-prop": "guestinfo.cis.vmdir.first-instance",
                              "__comments": "Specifies whether you are deploying the first Embedded Platform Services Controller in the domain. To create a new vCenter Single Sign-On domain, set the value to 'true'. To join a replication partner to an existing vCenter Single Sign-On domain, set the value to 'false'."
                            }
                          },
                          "network": {
                            "__comments": "This subsection describes the network settings of the new appliance.",
                            "ip_family": {
                              "required": false,
                              "type": {
                                "py/type": "config_parser.IpEnum"
                              },
                              "default": "ipv4",
                              "validate": {
                                "py/function": "config_parser.validate_ip_family"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    null,
                                    null
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.addr.family",
                              "__comments": "Network IP address family."
                            },
                            "mode": {
                              "required": true,
                              "type": {
                                "py/type": "config_parser.NetworkModeEnum"
                              },
                              "ovf-prop": "guestinfo.cis.appliance.net.mode",
                              "__comments": "Network mode. Use this parameter to select how to allocate the IP address of the appliance."
                            },
                            "ip": {
                              "required": {
                                "py/function": "config_parser._network_is_static"
                              },
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "normalize": {
                                "py/function": "utils.base.detect_and_remove_ipv6_brackets"
                              },
                              "validate": {
                                "py/function": "config_parser.validate_ip"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "ip_family"
                                  ]
                                },
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                },
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "dns_servers"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.addr",
                              "__comments": "Network IP address. Required only if the mode is \"static\". Can be IPv4 or IPv6 based on the specified address family."
                            },
                            "prefix": {
                              "required": {
                                "py/function": "config_parser._network_is_static"
                              },
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "validate": {
                                "py/function": "config_parser.validate_prefix"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "ip_family"
                                  ]
                                },
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.prefix",
                              "__comments": "Network prefix length. Use only when the mode is 'static'. Remove if the mode is 'dhcp'. This is the number of bits set in the subnet mask; for instance, if the subnet mask is 255.255.255.0, there are 24 bits in the binary version of the subnet mask, so the prefix length is 24. If used, the values must be in the inclusive range of 0 to 32 for IPv4 and 0 to 128 for IPv6."
                            },
                            "gateway": {
                              "required": {
                                "py/function": "config_parser._network_is_static"
                              },
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "normalize": {
                                "py/function": "config_parser.normalize_gateway"
                              },
                              "validate": {
                                "py/function": "config_parser.validate_gateway"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "ip_family"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.gateway",
                              "__comments": "The IP address of the default gateway. Can be \"default\" when using IPv6."
                            },
                            "system_name": {
                              "required": false,
                              "validate": {
                                "py/function": "config_parser._is_valid_system_name"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.pnid",
                              "__comments": "Primary network identity. Can be either an IP address or a fully qualified domain name (FQDN). Not supported if the network mode is DHCP, but optional if the network mode is static."
                            },
                            "dns_servers": {
                              "required": false,
                              "type": [
                                {
                                  "py/type": "builtins.str"
                                },
                                {
                                  "py/type": "builtins.list"
                                }
                              ],
                              "normalize": {
                                "py/function": "config_parser.serialize_array_string"
                              },
                              "validate": {
                                "py/function": "config_parser.validate_dns_servers"
                              },
                              "validate_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "ip_family"
                                  ]
                                },
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "network",
                                    "mode"
                                  ]
                                }
                              ],
                              "ovf-prop": "guestinfo.cis.appliance.net.dns.servers",
                              "__comments": "A comma-separated list of IP addresses of DNS servers. Can be a JSON array such as [\"1.2.3.4\", \"127.0.0.1\"] or a serialized string such as \"1.2.3.4,127.0.0.1\". This key is optional."
                            },
                            "ports": {
                              "required": false,
                              "validate": {
                                "py/function": "install.validate_port_mapping"
                              },
                              "type": {
                                "py/type": "builtins.dict"
                              },
                              "ovf-prop": "guestinfo.cis.appliance.net.ports",
                              "__comments": "Port numbers on which the vCenter Server Appliance communicates with the other vSphere components. The input must be a dictionary: \"ports\": {\"rhttpproxy.ext.port2\":\"13443\", \"rhttpproxy.ext.port1\":\"7441\"}. You can customize the following ports: rhttpproxy.ext.port1\nrhttpproxy.ext.port2."
                            }
                          }
                        },
                        "ceip": {
                          "__comments": "VMware Customer Experience Improvement Program (CEIP)",
                          "description": {
                            "__comments": "This product participates in VMware's Customer Experience\nImprovement Program ('CEIP'). Details regarding the data\ncollected through CEIP and the purposes for which it is used\nby VMware are set forth at the Trust & Assurance Center at\nhttp://www.vmware.com/trustvmware/ceip.html. To join\nthe CEIP for this product, in the template, set\n'ceip_enabled': true. To leave the CEIP for this product, set\n'ceip_enabled': false. Please confirm your acknowledgement\nby passing in the parameter --acknowledge-ceip in the\ncommand line.\n"
                          },
                          "settings": {
                            "__comments": "CEIP participation options",
                            "ceip_enabled": {
                              "required": {
                                "py/function": "config_parser.is_ceip_required"
                              },
                              "required_args": [
                                {
                                  "py/tuple": [
                                    "new_vcsa",
                                    "appliance",
                                    "deployment_option"
                                  ]
                                }
                              ],
                              "type": {
                                "py/type": "builtins.bool"
                              },
                              "ovf-prop": "guestinfo.cis.ceip_enabled",
                              "__comments": "This key describes the enabling option for the VMware's Customer Experience Improvement Program (CEIP). By default we have 'ceip_enabled': true, which indicates that you are joining CEIP. If you prefer not to participate in the VMware's CEIP for this product, you must disable CEIP by setting 'ceip_enabled': false. You may join or leave VMware's CEIP for this product at any time."
                            }
                          }
                        },
                        "__comments": "List of the JSON parameters that you can use to prepare templates for deployment of embedded and external instances of the VCSA {'version': '8.0.2.00000'}."
                      },
                      "action": "install",
                      "_user_data": {
                        "py/object": "collections.defaultdict",
                        "__version": "2.13.0",
                        "new_vcsa": {
                          "esxi": {
                            "hostname": "ce01esx01.dev.deu.local",
                            "username": "root",
                            "password": "******",
                            "deployment_network": "VM Network",
                            "datastore": "datastore1",
                            "port": 443
                          },
                          "appliance": {
                            "thin_disk_mode": true,
                            "deployment_option": "tiny",
                            "name": "DEV_DEU_CE01VCSA01",
                            "ovftool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool"
                          },
                          "network": {
                            "ip_family": "ipv4",
                            "mode": "static",
                            "system_name": "ce01vcsa01.dev.deu.local",
                            "ip": "10.33.0.47",
                            "prefix": "24",
                            "gateway": "10.33.0.254",
                            "dns_servers": "10.33.15.1,10.33.15.2"
                          },
                          "os": {
                            "password": "******",
                            "ssh_enable": true,
                            "ntp_servers": "10.32.10.1,10.32.10.2"
                          },
                          "sso": {
                            "password": "******",
                            "domain_name": "vsphere.local",
                            "first_instance": true,
                            "sso_port": 443
                          }
                        },
                        "ceip": {
                          "description": {},
                          "settings": {
                            "ceip_enabled": false
                          }
                        },
                        "default_factory": {
                          "py/object": "jsonpickle.handlers.CloneFactory",
                          "exemplar": {
                            "py/object": "collections.defaultdict",
                            "default_factory": {
                              "py/object": "jsonpickle.handlers.CloneFactory",
                              "exemplar": {
                                "py/object": "collections.defaultdict",
                                "default_factory": {
                                  "py/object": "jsonpickle.handlers.CloneFactory",
                                  "exemplar": null
                                }
                              }
                            }
                          }
                        }
                      },
                      "repeated_keys": {
                        "py/set": []
                      },
                      "template_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json",
                      "host": "ce01esx01.dev.deu.local",
                      "port": 443,
                      "datastore": "datastore1",
                      "username": "root",
                      "password": "******",
                      "deployment_network": "VM Network",
                      "vm_folder": null,
                      "target_path": [],
                      "deployment_path": "",
                      "vcsa_cluster": null,
                      "datacenter": null,
                      "cluster": null,
                      "compression_only": null,
                      "deduplication_and_compression": null,
                      "enable_vlcm": null,
                      "cache_disk": null,
                      "capacity_disk": null,
                      "enable_vsan_esa": null,
                      "single_tier": null,
                      "vsan_hcl_database_path": null,
                      "host_cert_thumbprint": null,
                      "skip_host_cert_verification": false,
                      "image_url_cert_thumbprint": null,
                      "skip_image_url_cert_verification": false,
                      "deploying_to_resource_pool": false,
                      "vum_hostname": null,
                      "source": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/VMware-vCenter-Server-Appliance-8.0.2.00100-22617221_OVF10.ova",
                      "ovftool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
                      "deployment_option": "tiny",
                      "is_vmc": false,
                      "appliance_name": "DEV_DEU_CE01VCSA01",
                      "is_thin_disk": true,
                      "ssh_enable": true,
                      "is_sso_first_instance": true,
                      "sso_host": null,
                      "sso_domain": "vsphere.local",
                      "infrastructure_node": null,
                      "sso_password": "******",
                      "root_password": "******",
                      "_extra_ovf_params": {
                        "guestinfo.cis.system.vm0.port": {
                          "password": false,
                          "value": 443
                        }
                      },
                      "is_ceip_enabled": false,
                      "ovaDeploymentOptionsValues": {
                        "py/object": "cli_ova.ova_layout_info.OvaLayoutInfo",
                        "option_count": 15
                      },
                      "sso_ad_domain": null,
                      "sso_ad_username": null,
                      "sso_ad_password": null,
                      "sso_ou": null,
                      "ip_family": "ipv4",
                      "network_mode": "static",
                      "ip_address": "10.33.0.47",
                      "network_prefix": "24",
                      "gateway": "10.33.0.254",
                      "net_ports": null,
                      "dns_servers": "10.33.15.1,10.33.15.2",
                      "system_name": "ce01vcsa01.dev.deu.local",
                      "replication_node": null,
                      "sso_port": 443,
                      "sso_cert_thumbprint": null,
                      "skip_sso_cert_verification": false
                    },
                    "version_min_target_esx_version": "6.5.0",
                    "version_min_target_vc_version": "6.5.0",
                    "version_min_target_vcsa_cluster_esx_version": "7.0.2",
                    "swap_file_size": 14,
                    "datastore_freespace": 120.34,
                    "cli_arg_sub_command": "install",
                    "cli_installer_log_file": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/vcsa-cli-installer.log",
                    "cli_arg_precheck_only": false,
                    "cli_arg_no_ssl_certificate_verification": true,
                    "template_list": [
                      "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json"
                    ],
                    "template_format": "json",
                    "operation": "install",
                    "template_type": "EMBEDDED",
                    "deployment_path": "",
                    "deployment_type": "embedded",
                    "ova_package_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/VMware-vCenter-Server-Appliance-8.0.2.00100-22617221_OVF10.ova",
                    "ovf_tool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
                    "template_newvc_ovftool_arguments": {},
                    "service_install_monitoring_timeout": 2400,
                    "template_newvc_appliance_deployment_option": "tiny",
                    "is_vmc": false,
                    "template_newvc_appliance_name": "DEV_DEU_CE01VCSA01",
                    "template_newvc_appliance_thin_disk_mode": true,
                    "template_newvc_os_root_password": "******",
                    "template_newvc_os_ssh_enabled": true,
                    "sso_host": null,
                    "template_newvc_sso_domain_name": "vsphere.local",
                    "template_newvc_sso_password": "******",
                    "template_newvc_esxi_datastore": "datastore1",
                    "template_newvc_host_deployment_network": "VM Network",
                    "template_newvc_host_hostname": "ce01esx01.dev.deu.local",
                    "template_newvc_host_password": "******",
                    "template_newvc_host_port": 443,
                    "template_newvc_host_target": {
                      "py/id": 208
                    },
                    "template_newvc_host_type": "esxi",
                    "template_newvc_host_username": "root",
                    "template_newvc_host_datastore": "datastore1",
                    "template_newvc_vc_datacenter": null,
                    "template_newvc_host_cert_thumbprint": null,
                    "template_newvc_host_cert_verification": false,
                    "template_image_url_cert_thumbprint": null,
                    "template_skip_image_url_cert_verification": false,
                    "template_newvc_is_vc_deploy_mode": false,
                    "template_newvc_host_vm_folder": null,
                    "template_ceip_settings_ceip_enabled": false,
                    "template_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json",
                    "operation_id": null,
                    "workflow_logger_name": "vCSACliInstallLogger",
                    "deploying_to_resource_pool": false,
                    "use_new_monitoring_task": true,
                    "ovftool_auto_config": true,
                    "cli_arg_supported_deployment_sizes": false,
                    "cli_arg_template_help": false,
                    "cli_arg_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files",
                    "cli_arg_skip_precheck": false,
                    "cli_arg_accept_eula": true,
                    "cli_arg_acknowledge_ceip": true,
                    "cli_arg_pause_on_warnings": false,
                    "cli_arg_operation_id": null,
                    "cli_arg_verbose": false,
                    "cli_arg_terse": false,
                    "cli_arg_verify_template_only": false,
                    "cli_arg_allow_vmc_sku": false,
                    "cli_arg_template": {
                      "py/id": 212
                    },
                    "cli_arg_precheck_rpm_path": null,
                    "taskflow_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi",
                    "workflow_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146",
                    "target_host_type": "esxi"
                  },
                  "json_file_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/blackboard.json",
                  "maskables_dict": {
                    "password": "******",
                    "passwd": "******",
                    "key": "******"
                  }
                }
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully verified that the credentials provided for the target ESXi/VC are valid",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/object": "pylcmstatus.lcm_status.CurrentStatus",
                "log_location": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/prechecks/install/status.json",
                "status": {
                  "py/object": "pylcmstatus.lcm_status.Status",
                  "name": "SUCCEEDED",
                  "_description": "Task succeeded"
                },
                "start_time": "2023-12-01T10:01:28.945571",
                "last_updated_time": "2023-12-01T10:02:31.766135",
                "end_time": "2023-12-01T10:02:31.766135",
                "progress": {
                  "py/object": "pylcmstatus.lcm_status.Progress",
                  "total": 17,
                  "completed": 17,
                  "message": {
                    "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                    "default_message": "Successfully executed Task 'Running Pre-check: vSphere vLCM Cluster Enablement.' in TaskFlow 'install'",
                    "id": "",
                    "args": []
                  }
                },
                "metadata_file": "",
                "operation": null,
                "service": false,
                "description": null,
                "subtasks": {
                  "com.vmware.vcsa.installer.prechecks.target_credentials": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.target_credentials",
                    "description": "Verify that the provided credentials for the target ESXi/VC are valid",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: TargetCredentials' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:28.945538",
                    "last_updated_time": "2023-12-01T10:01:29.040556",
                    "end_time": "2023-12-01T10:01:29.040556",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.host_configs": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.host_configs",
                    "description": "Precheck CPU, memory and datastore size requirements for a host.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: HostConfigs' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:29.092112",
                    "last_updated_time": "2023-12-01T10:01:29.971475",
                    "end_time": "2023-12-01T10:01:29.971475",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [
                        {
                          "py/object": "pylcmstatus.lcm_status.Notification",
                          "id": "",
                          "severity": {
                            "py/object": "pylcmstatus.lcm_status.Severity",
                            "name": "INFO",
                            "_description": "INFO"
                          },
                          "time": "2023-12-01T10:01:26.637764",
                          "message": {
                            "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                            "default_message": "Found datastore 'datastore1' in host 'ce01esx01.dev.deu.local': Capacity = 121.75 GB. Free space = 120.34 GB.\nFound non-clustered host 'ce01esx01.dev.deu.local'. Memory size: 16.0 GB. Physical CPU (core) count: 8. CPUs do not have hyperthreading capability.",
                            "id": "",
                            "args": {
                              "py/id": 219
                            }
                          },
                          "resolution": {
                            "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                            "default_message": "",
                            "id": "",
                            "args": {
                              "py/id": 219
                            }
                          }
                        }
                      ],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.target_host_type": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.target_host_type",
                    "description": "Verify the target host type matches the one given in the template",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: TargetHostType' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:30.020484",
                    "last_updated_time": "2023-12-01T10:01:30.116480",
                    "end_time": "2023-12-01T10:01:30.116480",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.target_version": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.target_version",
                    "description": "Verify that the target ESXi or VC version meets the minimum requirements",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: TargetVersion' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:30.169568",
                    "last_updated_time": "2023-12-01T10:01:30.260984",
                    "end_time": "2023-12-01T10:01:30.260984",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.ova_properties": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.ova_properties",
                    "description": "Validate that the OVA image has the required OVA properties.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: OVAProperties.' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:30.312664",
                    "last_updated_time": "2023-12-01T10:01:30.643421",
                    "end_time": "2023-12-01T10:01:30.643421",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use",
                    "description": "Validate the provided ip/fqdn is available to use",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: IpFqdnInUse' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:01:30.692771",
                    "last_updated_time": "2023-12-01T10:02:30.848284",
                    "end_time": "2023-12-01T10:02:30.848284",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation",
                    "description": "Validate the linking target hostname with the remote server certificate CN or SAN. ",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: LinkingTargetHostnameValidation' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "",
                    "last_updated_time": "2023-12-01T10:02:30.935989",
                    "end_time": "2023-12-01T10:02:30.935989",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.dns_resolve_task": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.dns_resolve_task",
                    "description": "Validate that if the provided DNS is available to use.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: DNSResolveTask' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:30.984115",
                    "last_updated_time": "2023-12-01T10:02:30.989489",
                    "end_time": "2023-12-01T10:02:30.989489",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.esx_management_status": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.esx_management_status",
                    "description": "Validate the target ESXi management status",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: ESXManagementStatus' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.037060",
                    "last_updated_time": "2023-12-01T10:02:31.174559",
                    "end_time": "2023-12-01T10:02:31.174559",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.appliance_name": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.appliance_name",
                    "description": "Validate the provided target appliance name is available to use",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: ApplianceName' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.231859",
                    "last_updated_time": "2023-12-01T10:02:31.328545",
                    "end_time": "2023-12-01T10:02:31.328545",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.target_appliance_type": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.target_appliance_type",
                    "description": "",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task '' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.383104",
                    "last_updated_time": "2023-12-01T10:02:31.389336",
                    "end_time": "2023-12-01T10:02:31.389336",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.target_ds_freespace": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.target_ds_freespace",
                    "description": "Check whether the datastore's free space accommodate the VCSA's deployment option",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: TargetDsFreespace' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.439634",
                    "last_updated_time": "2023-12-01T10:02:31.445969",
                    "end_time": "2023-12-01T10:02:31.445969",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.sso_credentials": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.sso_credentials",
                    "description": "Verify the provided SSO info is valid by connecting to the STS service.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: SSOCredentials' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.516167",
                    "last_updated_time": "2023-12-01T10:02:31.522078",
                    "end_time": "2023-12-01T10:02:31.522078",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.prechecks.sso_external": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.prechecks.sso_external",
                    "description": "Verify that the provided external SSO (PSC)/Embedded info is valid",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running precheck: SSOExternal' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.572617",
                    "last_updated_time": "2023-12-01T10:02:31.579487",
                    "end_time": "2023-12-01T10:02:31.579487",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.precheck.vsan_bootstrap": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.precheck.vsan_bootstrap",
                    "description": "Running Pre-check for vSAN Bootstrap.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running Pre-check: vSAN Bootstrap.' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.636508",
                    "last_updated_time": "2023-12-01T10:02:31.647185",
                    "end_time": "2023-12-01T10:02:31.647185",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.precheck.vsan_cluster_health": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.precheck.vsan_cluster_health",
                    "description": "Running vSAN Cluster Health Checks.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running Pre-check: vSAN Cluster Health Checks.' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.699905",
                    "last_updated_time": "2023-12-01T10:02:31.706736",
                    "end_time": "2023-12-01T10:02:31.706736",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  },
                  "com.vmware.vcsa.installer.precheck.vlcm_cluster": {
                    "py/object": "pylcmstatus.lcm_status.Task",
                    "name": "com.vmware.vcsa.installer.precheck.vlcm_cluster",
                    "description": "Running Pre-check for vSphere vLCM Cluster Enablement.",
                    "progress": {
                      "py/object": "pylcmstatus.lcm_status.Progress",
                      "total": 1,
                      "completed": 1,
                      "message": {
                        "py/object": "pylcmstatus.lcm_status.LocalizableMessage",
                        "default_message": "Successfully executed Task 'Running Pre-check: vSphere vLCM Cluster Enablement.' in TaskFlow 'install'",
                        "id": "",
                        "args": {
                          "py/id": 219
                        }
                      }
                    },
                    "start_time": "2023-12-01T10:02:31.758395",
                    "last_updated_time": "2023-12-01T10:02:31.764402",
                    "end_time": "2023-12-01T10:02:31.764402",
                    "external_tools": [],
                    "status": {
                      "py/id": 216
                    },
                    "result": {
                      "py/object": "pylcmstatus.lcm_status.Result",
                      "info": [],
                      "warnings": [],
                      "errors": [],
                      "_ordering": []
                    }
                  }
                },
                "subtask_order": [
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_credentials",
                      "com.vmware.vcsa.installer.prechecks.target_appliance_type"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_credentials",
                      "com.vmware.vcsa.installer.prechecks.appliance_name"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_credentials",
                      "com.vmware.vcsa.installer.prechecks.target_host_type"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_credentials",
                      "com.vmware.vcsa.installer.prechecks.host_configs"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_appliance_type",
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.appliance_name",
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_host_type",
                      "com.vmware.vcsa.installer.prechecks.esx_management_status"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_host_type",
                      "com.vmware.vcsa.installer.prechecks.target_version"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.host_configs",
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.esx_management_status",
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_version",
                      "com.vmware.vcsa.installer.prechecks.ova_properties"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.ova_properties",
                      "com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use",
                      "com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation",
                      "com.vmware.vcsa.installer.prechecks.dns_resolve_task"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.dns_resolve_task",
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.target_ds_freespace",
                      "com.vmware.vcsa.installer.prechecks.sso_credentials"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.sso_credentials",
                      "com.vmware.vcsa.installer.prechecks.sso_external"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.prechecks.sso_external",
                      "com.vmware.vcsa.installer.precheck.vsan_bootstrap"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.precheck.vsan_bootstrap",
                      "com.vmware.vcsa.installer.precheck.vsan_cluster_health"
                    ]
                  },
                  {
                    "py/tuple": [
                      "com.vmware.vcsa.installer.precheck.vsan_cluster_health",
                      "com.vmware.vcsa.installer.precheck.vlcm_cluster"
                    ]
                  }
                ],
                "state": "<placeholder>",
                "appliance_info": {
                  "py/object": "pylcmstatus.lcm_status.ApplianceInfo",
                  "appliance_name": "DEV_DEU_CE01VCSA01",
                  "appliance_fqdn": "",
                  "appliance_ips": []
                },
                "_task_ordered": true
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 80
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          },
          {
            "py/object": "cli_tasks.precheck.tasks.target_appliance_type.TargetApplianceTypeTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": false,
              "identifier": "com.vmware.vcsa.installer.prechecks.target_appliance_type",
              "summary": "",
              "description": "",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_appliance_deployment_option"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 382
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 80
          },
          {
            "py/object": "cli_tasks.precheck.tasks.appliance_name.ApplianceNameTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.appliance_name",
              "summary": "Running precheck: ApplianceName",
              "description": "Validate the provided target appliance name is available to use",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated the new appliance name is available to use",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_appliance_name",
                  "deployment_path",
                  "template_newvc_is_vc_deploy_mode",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 386
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 80
          },
          {
            "py/object": "cli_tasks.precheck.tasks.target_host_type.TargetHostTypeTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.target_host_type",
              "summary": "Running precheck: TargetHostType",
              "description": "Verify the target host type matches the one given in the template",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully verified the target host type",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_is_vc_deploy_mode",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 390
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 80
          },
          {
            "py/object": "cli_tasks.precheck.tasks.host_configs.HostConfigsTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.host_configs",
              "summary": "Running precheck: HostConfigs",
              "description": "Precheck CPU, memory and datastore size requirements for a host.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated that CPU, memory and datastore storage requirements are met",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_is_vc_deploy_mode",
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_appliance_name",
                  "template_newvc_appliance_deployment_option",
                  "template_newvc_host_datastore",
                  "template_newvc_appliance_thin_disk_mode",
                  "ova_package_path",
                  "template_newvc_host_target",
                  "deployment_path",
                  "template_skip_image_url_cert_verification",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 394
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 382
          },
          {
            "py/object": "cli_tasks.precheck.tasks.target_ds_freespace.TargetDsFreespaceTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.target_ds_freespace",
              "summary": "Running precheck: TargetDsFreespace",
              "description": "Check whether the datastore's free space accommodate the VCSA's deployment option",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully verified the datastore's free space",
              "required_bb_keys": {
                "py/tuple": [
                  "ova_package_path",
                  "template_newvc_appliance_deployment_option",
                  "template_newvc_appliance_thin_disk_mode",
                  "template_newvc_host_datastore",
                  "swap_file_size",
                  "datastore_freespace",
                  "template_newvc_host_hostname"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 398
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 386
          },
          {
            "py/id": 398
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 390
          },
          {
            "py/object": "cli_tasks.precheck.tasks.esx_management_status.ESXManagementStatusTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.esx_management_status",
              "summary": "Running precheck: ESXManagementStatus",
              "description": "Validate the target ESXi management status",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated the target ESXi management status",
              "required_bb_keys": {
                "py/tuple": [
                  "cli_arg_sub_command",
                  "template_newvc_host_hostname",
                  "template_newvc_host_port",
                  "template_newvc_host_username",
                  "template_newvc_host_password"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 402
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 390
          },
          {
            "py/object": "cli_tasks.precheck.tasks.target_version.TargetVersionTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.target_version",
              "summary": "Running precheck: TargetVersion",
              "description": "Verify that the target ESXi or VC version meets the minimum requirements",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully verified that the target ESXi or VC version meets the minimum requirements",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "version_min_target_esx_version",
                  "version_min_target_vc_version",
                  "target_host_type",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 406
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 394
          },
          {
            "py/id": 398
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 402
          },
          {
            "py/id": 398
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 406
          },
          {
            "py/object": "cli_tasks.precheck.tasks.ova_properties.OVAPropertiesTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.ova_properties",
              "summary": "Running precheck: OVAProperties.",
              "description": "Validate that the OVA image has the required OVA properties.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated that the OVA image has the required OVA properties.",
              "required_bb_keys": {
                "py/tuple": [
                  "ovf_tool_path",
                  "ova_package_path",
                  "cli_arg_precheck_only"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 410
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 410
          },
          {
            "py/object": "cli_tasks.precheck.tasks.ip_fqdn_in_use.IpFqdnInUseTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.ip_fqdn_in_use",
              "summary": "Running precheck: IpFqdnInUse",
              "description": "Validate the provided ip/fqdn is available to use",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated the ip/fqdn is not in use.",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_network_mode"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 414
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 414
          },
          {
            "py/object": "cli_tasks.precheck.tasks.linking_target_hostname_validation_task.LinkingTargetHostnameValidationTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.linking_target_hostname_validation",
              "summary": "Running precheck: LinkingTargetHostnameValidation",
              "description": "Validate the linking target hostname with the remote server certificate CN or SAN. ",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated the linking target hostname is valid with the remote server certificate.",
              "required_bb_keys": {
                "py/tuple": []
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 418
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 418
          },
          {
            "py/object": "cli_tasks.precheck.tasks.dns_resolver.DNSResolveTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": false,
              "identifier": "com.vmware.vcsa.installer.prechecks.dns_resolve_task",
              "summary": "Running precheck: DNSResolveTask",
              "description": "Validate that if the provided DNS is available to use.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated that the DNS is reachable and hostname is resolvable.",
              "required_bb_keys": {
                "py/tuple": []
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 422
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 422
          },
          {
            "py/id": 398
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 398
          },
          {
            "py/object": "cli_tasks.precheck.tasks.sso_credentials.SSOCredentialsTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.sso_credentials",
              "summary": "Running precheck: SSOCredentials",
              "description": "Verify the provided SSO info is valid by connecting to the STS service.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully validated the provided SSO information.",
              "required_bb_keys": {
                "py/tuple": [
                  "sso_host",
                  "template_newvc_sso_sso_port",
                  "template_newvc_sso_domain_name",
                  "template_newvc_sso_password",
                  "skip_first_instance_sso_prechecks"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 426
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 426
          },
          {
            "py/object": "cli_tasks.precheck.tasks.sso_external.SSOExternalTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.prechecks.sso_external",
              "summary": "Running precheck: SSOExternal",
              "description": "Verify that the provided external SSO (PSC)/Embedded info is valid",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Successfully verified that the provided external SSO (PSC)/Embedded info is valid",
              "required_bb_keys": {
                "py/tuple": [
                  "sso_host",
                  "template_newvc_sso_domain_name",
                  "template_newvc_sso_password",
                  "template_newvc_sso_sso_port",
                  "deployment_type",
                  "skip_first_instance_sso_prechecks",
                  "template_type"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 430
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 430
          },
          {
            "py/object": "cli_tasks.precheck.tasks.vsan_bootstrap.VSANBootstrapTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.precheck.vsan_bootstrap",
              "summary": "Running Pre-check: vSAN Bootstrap.",
              "description": "Running Pre-check for vSAN Bootstrap.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Pre-check for vSAN Bootstrap succeeded.",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_host_cert_verification",
                  "template_newvc_host_cert_thumbprint"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 434
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 434
          },
          {
            "py/object": "cli_tasks.precheck.tasks.vsan_cluster_health.VSANClusterHealthTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.precheck.vsan_cluster_health",
              "summary": "Running Pre-check: vSAN Cluster Health Checks.",
              "description": "Running vSAN Cluster Health Checks.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "vSAN Cluster Health Checks succeeded.",
              "required_bb_keys": {
                "py/tuple": [
                  "template_newvc_host_hostname",
                  "template_newvc_host_username",
                  "template_newvc_host_password",
                  "template_newvc_host_port",
                  "template_newvc_host_cert_verification"
                ]
              },
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 438
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      },
      {
        "py/tuple": [
          {
            "py/id": 438
          },
          {
            "py/object": "cli_tasks.precheck.tasks.vlcm_cluster.VLCMClusterTask",
            "py/state": {
              "observers": [
                {
                  "py/id": 0
                }
              ],
              "status": {
                "py/id": 78
              },
              "execute_retried": 1,
              "rollback_retried": 0,
              "execute_retry": 0,
              "rollback_retry": 0,
              "ignore_if_failed": true,
              "identifier": "com.vmware.vcsa.installer.precheck.vlcm_cluster",
              "summary": "Running Pre-check: vSphere vLCM Cluster Enablement.",
              "description": "Running Pre-check for vSphere vLCM Cluster Enablement.",
              "blackboard": {
                "py/id": 83
              },
              "global_blackboard": null,
              "successful_result_message": "Pre-check for vSphere vLCM Cluster Enablement succeeded.",
              "required_bb_keys": "******",
              "total_subtasks": 1,
              "exception": null,
              "traceback": null,
              "processed": null,
              "taskflow_current_status": {
                "py/id": 215
              },
              "taskflow_unique_identifier": "install",
              "main_logger_name": "vCSACliInstallLogger",
              "workflow_identifier": "workflow_1701424887146",
              "telemetry": {
                "py/object": "telemetry.TaskTelemetryObjectImp",
                "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
                "vac_url": "https://vcsa.vmware.com/ph/",
                "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
                "task_id": "",
                "start_time": "",
                "end_time": "",
                "status": "",
                "error_id": "",
                "task": {
                  "py/id": 442
                },
                "version": "8.0.2.00000",
                "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2"
              }
            }
          }
        ]
      }
    ],
    "maskables_dict": {
      "py/id": 214
    },
    "unique_identifier": "install",
    "wf_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/prechecks",
    "log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/prechecks/install",
    "result_file": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/prechecks/install/vcsa-cli-installer-result.json",
    "start_execution_time": 1701424888.929465,
    "operation_id": null,
    "main_logger_name": "vCSACliInstallLogger",
    "workflow_identifier": "workflow_1701424887146",
    "use_threading": false,
    "blackboard": {
      "py/id": 83
    },
    "_status_updaters": [],
    "global_blackboard": null,
    "current_status": {
      "py/id": 215
    },
    "nodes": {
      "py/object": "networkx.classes.reportviews.NodeView",
      "py/state": {
        "_nodes": {
          "py/id": 3
        }
      }
    },
    "succ": {
      "py/object": "networkx.classes.coreviews.AdjacencyView",
      "py/state": {
        "_atlas": {
          "py/id": 21
        }
      }
    },
    "edges": {
      "py/object": "networkx.classes.reportviews.OutEdgeView",
      "py/state": {
        "_graph": {
          "py/id": 0
        },
        "_adjdict": {
          "py/id": 21
        }
      }
    },
    "aggregated_status_handler": null,
    "telemetry": {
      "py/object": "telemetry.TaskFlowTelemetryObjectImp",
      "instance_id": "91657bbd673fe5bc431fe83eafcb670d933bb74203fd80a509f624c58ca468a9",
      "vac_url": "https://vcsa.vmware.com/ph/",
      "run_id": "1893a7a0d31a44f1819aa4ceca8ed96e",
      "source_vc_id": "",
      "source_vc_version": "",
      "target_vc_id": "",
      "target_vc_version": "",
      "operation": "",
      "on_esxi": "",
      "start_time": "",
      "end_time": "",
      "appliance_type": "",
      "deployment_option": "",
      "thin_disk_mode": "",
      "ssh_enabled": "",
      "network_mode": "",
      "is_standalone": "",
      "data_set": "",
      "defer_import": "",
      "database_size": "",
      "invoker": "cli-client",
      "cluster_option": "",
      "cluster_deduplication_enabled": "",
      "cluster_compression_only": "",
      "cluster_cache_disk_length": "",
      "cluster_capacity_disk_length": "",
      "cluster_seedhost_version": "",
      "storage_pool_size": "",
      "download_vsan_hcl_db_duration": "",
      "upload_vsan_hcl_db_to_host_duration": "",
      "vsan_health_check_duration": "",
      "network_ip_family": "",
      "stage_failed": "",
      "precheck_task_duration": "",
      "appliance_deployment_task_duration": "",
      "rpm_deployment_task_duration": "",
      "firstboot_task_duration": "",
      "new_vc_target_path": "",
      "custom_network_port": "",
      "custom_domain_name": "",
      "deployment_jumphost_os": "",
      "jumphost_os_release": "",
      "taskflow": {
        "py/id": 0
      },
      "version": "8.0.2.00000",
      "taskflow_unique_identifier": "89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2",
      "product": "VCSA"
    }
  }
}