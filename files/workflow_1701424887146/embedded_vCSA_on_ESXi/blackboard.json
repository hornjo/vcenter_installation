{
  "py/object": "tasking.utils.blackboard.Blackboard",
  "py/state": {
    "data": {
      "template_newvc_sso_first_instance": true,
      "template_newvc_sso_platform_service_controller": null,
      "template_newvc_sso_replication_partner_hostname": null,
      "template_newvc_sso_sso_port": 443,
      "template_newvc_sso_site_name": null,
      "template_newvc_sso_cert_thumbprint": null,
      "template_skip_sso_cert_verification": false,
      "template_sourcevc_ad_domain": null,
      "template_sourcevc_ad_username": null,
      "template_sourcevc_ad_password": null,
      "template_ad_ou": null,
      "template_newvc_network_ip_family": "ipv4",
      "template_newvc_network_mode": "static",
      "template_newvc_network_ip": "10.33.0.47",
      "template_newvc_network_prefix": "24",
      "template_newvc_network_gateway": "10.33.0.254",
      "template_newvc_network_ports": null,
      "template_newvc_network_dns_servers": "10.33.15.1,10.33.15.2",
      "template_newvc_network_system_name": "ce01vcsa01.dev.deu.local",
      "template_newvc_os_ntp_servers": "10.32.10.1,10.32.10.2",
      "template_newvc_os_time_tools_sync": null,
      "precheck_task_duration": 62.91002297401428,
      "appliance_deployment_task_duration": 1410.8411638736725,
      "rpm_deployment_task_duration": null,
      "firstboot_task_duration": null,
      "skip_first_instance_sso_prechecks": false,
      "stage_deployment_failed": null,
      "new_vc_target_path": null,
      "deployment_jumphost_os": "macOS-14.0-arm64-arm-64bit",
      "jumphost_os_release": "23.0.0",
      "template_newvc_vcsa_cluster": null,
      "template_newvc_cluster": null,
      "template_newvc_compression_only": null,
      "template_newvc_datacenter": null,
      "template_newvc_deduplication_and_compression": null,
      "template_newvc_disk_for_vsa_cache_disk": null,
      "template_newvc_disk_for_vsa_capacity_disk": null,
      "template_newvc_enable_vlcm": null,
      "template_newvc_seedhost_version": null,
      "template_newvc_enable_vsan_esa": null,
      "template_newvc_disks_for_single_tier": null,
      "template_newvc_vsan_hcl_database_path": null,
      "template_newvc_download_vsan_hcl_database_duration": null,
      "template_newvc_upload_vsan_hcl_database_duration": null,
      "template_newvc_health_check_duration": null,
      "template_config": {
        "skip_ssl_certificate_verification": true,
        "_load_ova": true,
        "_schema": {
          "__version": "2.13.0",
          "new_vcsa": {
            "__comments": "This section describes the appliance that you want to deploy.",
            "appliance": {
              "__comments": "The deployment option below affects the vCenter Server Appliance's configuration parameters, such as the vCenter Server Appliance's number of vCPUs, the memory size, the storage size, and the maximum numbers of ESXi hosts and VMs which the vCenter Server Appliance can manage. For a list of acceptable values, run the supported deployment sizes help, i.e. vcsa-deploy --supported-deployment-sizes",
              "deployment_option": {
                "required": true,
                "type": {
                  "py/type": "config_parser.DeploymentOptionEnum"
                },
                "validate": {
                  "py/function": "config_parser.validate_deployment_option"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "appliance",
                      "image"
                    ]
                  },
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "appliance",
                      "image_url_ssl_certificate_verification"
                    ]
                  }
                ],
                "__comments": "The type of appliance to deploy."
              },
              "name": {
                "required": true,
                "__comments": "The name of the appliance to deploy."
              },
              "thin_disk_mode": {
                "required": false,
                "type": {
                  "py/type": "builtins.bool"
                },
                "__comments": "To deploy the appliance with thin mode virtual disks, set the value to 'true'."
              },
              "image": {
                "required": false,
                "validate": {
                  "py/function": "cli_ova.ova_validator.validate_ova_path"
                },
                "validate_args": [
                  "is_default",
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "appliance",
                      "image_url_ssl_certificate_verification"
                    ]
                  }
                ],
                "__comments": "A local file path or URL to the vCenter Server Appliance 8.0.2.00000 installation package. The source is included in the installer ISO file."
              },
              "image_url_ssl_certificate_verification": {
                "validate": {
                  "py/function": "config_parser._validate_cert_verification_settings"
                },
                "type": {
                  "py/type": "builtins.dict"
                },
                "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
              },
              "ovftool_path": {
                "required": false,
                "default": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
                "validate": {
                  "py/function": "config_parser.validate_ovftool_path"
                },
                "validate_args": [
                  "is_default"
                ],
                "__comments": "A local file path to OVF Tool executable file."
              }
            },
            "os": {
              "__comments": "This subsection describes the operating system configurations for the new appliance.",
              "ssh_enable": {
                "required": false,
                "type": {
                  "py/type": "builtins.bool"
                },
                "ovf-prop": "guestinfo.cis.appliance.ssh.enabled",
                "__comments": "To enable the SSH administrator login option of the appliance, set the value to 'true'. You can change this setting after deployment."
              },
              "password": {
                "required": true,
                "ovf-prop": "guestinfo.cis.appliance.root.passwd",
                "__comments": "Password of the root user of the Linux operating system of the appliance. \nPassword must conform to the following requirements:\n    At least 8 characters\n    No more than 20 characters\n    At least 1 uppercase character\n    At least 1 lowercase character\n    At least 1 number\n    At least 1 special character (e.g., '!', '(', '@', etc.)\n    Only visible A-Z, a-z, 0-9 and punctuation (spaces are not allowed)\n",
                "password": true
              },
              "time_tools_sync": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "os",
                      null
                    ]
                  }
                ],
                "type": {
                  "py/type": "builtins.bool"
                },
                "ovf-prop": "guestinfo.cis.appliance.time.tools-sync",
                "__comments": "Required, unless \"ntp_servers\" is provided. To enable the VMware Tools time synchronization option of the appliance, set the value to 'true'. VMware Tools synchronizes the time of the appliance with the time of the ESXi host."
              },
              "ntp_servers": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "os",
                      null
                    ]
                  }
                ],
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "normalize": {
                  "py/function": "config_parser.serialize_array_string"
                },
                "validate": {
                  "py/function": "install.validate_ntp"
                },
                "ovf-prop": "guestinfo.cis.appliance.ntp.servers",
                "__comments": "Required, unless \"time_tools_sync\" is provided. To configure NTP time synchronization for the appliance, set the value to a comma-separated list of host names or IP addresses of Network Time Protocol (NTP) servers. Can be a JSON array such as [\"ntp1.com\", \"ntp2.com\"] or a serialized string such as \"ntp1.com,ntp2.com\"."
              }
            },
            "esxi": {
              "__comments": "This subsection describes the ESXi host on which to deploy the appliance. Required if you are deploying the appliance directly on an ESXi host. Fill in either this subsection or the 'vc' subsection.",
              "hostname": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "validate": {
                  "py/function": "config_parser._validate_esxi_hostname"
                },
                "__comments": "The IP address or fully qualified domain name (FQDN) of the ESXi host. If an FQDN is provided, it has to be resolvable from the machine that is running the installer."
              },
              "ssl_certificate_verification": {
                "validate": {
                  "py/function": "config_parser._validate_cert_verification_settings"
                },
                "type": {
                  "py/type": "builtins.dict"
                },
                "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
              },
              "port": {
                "required": false,
                "type": {
                  "py/type": "builtins.int"
                },
                "__comments": {
                  "py/tuple": [
                    "The port number of the ESXi host. The default value is %s.",
                    443
                  ]
                }
              },
              "datastore": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": {
                  "py/tuple": [
                    "The datastore on which to store the files of the appliance. This value has to be either a specific datastore name, or a specific datastore in a datastore cluster. The datastore must be accessible from the ESXi host and must have at least %s GB of free space. Otherwise, the new appliance might not power on.",
                    25
                  ]
                }
              },
              "username": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": "The user name of a user with administrative privileges on the ESXi host."
              },
              "password": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": "The password of the ESXi host user. If left blank, or omitted, you will be prompted to enter it at the command console during template verification.",
                "password": true
              },
              "deployment_network": {
                "required": false,
                "__comments": "The network of the ESXi host to which to connect the new appliance. When the ESXi host has one network, you can omit this parameter."
              },
              "target": {
                "required": false,
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "__comments": "Optional for the \"esxi\" section. When deploying to a resource pool, this is the path to the resource pool on the ESXi host where the appliance will be deployed. Be sure to include the \"Resources\" item. For example, \"target\": [\"Resources\", \"My Resource Pool\"]. Nested resouce pools may also be specified.  For example, \"target\": [\"Resources\", \"Parent Pool\", \"Child Pool\"]. All names are case-sensitive. Note that prechecks only verify the memory of the resource pool."
              },
              "VCSA_cluster": {
                "__comments": "This subsection describes the settings for the vSAN or vLCM managed cluster. Required only if you want to create a vSAN or vLCM managed cluster during the deployment of vCenter Server. ",
                "type": {
                  "py/type": "builtins.dict"
                },
                "datacenter": {
                  "type": {
                    "py/type": "builtins.str"
                  },
                  "__comments": "Datacenter where you want to deploy the vCenter Server."
                },
                "cluster": {
                  "type": {
                    "py/type": "builtins.str"
                  },
                  "__comments": "The vSAN or the vLCM managed cluster you want to create just after the vCenter Server deployment."
                },
                "compression_only": {
                  "type": {
                    "py/type": "builtins.bool"
                  },
                  "validate": {
                    "py/function": "config_parser._validate_vcsa_cluster_compression"
                  },
                  "validate_args": [
                    {
                      "py/tuple": [
                        "new_vcsa",
                        "exsi",
                        "VCSA_cluster",
                        "deduplication_and_compression"
                      ]
                    }
                  ],
                  "__comments": "Set the value to 'true' to enable compression on the vSAN cluster. If this parameter is set to 'true', the 'deduplication_and_compression' parameter must be set to 'false'."
                },
                "deduplication_and_compression": {
                  "type": {
                    "py/type": "builtins.bool"
                  },
                  "__comments": "Set the value to 'true' to enable compression and deduplication on the vSAN cluster.  If this parameter is set to 'true', the 'compression_only' parameter must be set to 'false'."
                },
                "disks_for_vsan": {
                  "__comments": "This section describes vSAN disk settings.",
                  "cache_disk": {
                    "__comments": "A list of UUIDs or canonical names of disks you want to use for cache. Specify only SSDs.",
                    "type": {
                      "py/type": "builtins.list"
                    }
                  },
                  "capacity_disk": {
                    "__comments": "A list of UUIDs or canonical names of disks you want to use for storage. Specify either SSDs or HDDs.",
                    "type": {
                      "py/type": "builtins.list"
                    }
                  }
                },
                "enable_vlcm": {
                  "type": {
                    "py/type": "builtins.bool"
                  },
                  "__comments": "Set to 'true' to create a vLCM managed cluster."
                },
                "enable_vsan_esa": {
                  "type": {
                    "py/type": "builtins.bool"
                  },
                  "__comments": "Set to 'true' to create vSAN cluster with vSAN ESA. vSAN Express Storage Architecture is a next-generation architecture designed to get the most out of high-performance storage devices, resulting in greater performance and efficiency."
                },
                "storage_pool": {
                  "__comments": "This section describes vSAN ESA disk settings.",
                  "single_tier": {
                    "__comments": "List of disk UUIDs or canonical names to be added to a vSAN storage pool as vSAN single tier devices.",
                    "type": {
                      "py/type": "builtins.list"
                    }
                  }
                },
                "vsan_hcl_database_path": {
                  "type": {
                    "py/type": "builtins.str"
                  },
                  "__comments": "Local path to the vSAN HCL database. If the vSAN HCL database present in this location is not up-to-date, the installer will download the latest version of the database and replace it with the older version."
                }
              }
            },
            "vc": {
              "__comments": "This subsection describes the vCenter Server instance on which to deploy the appliance. Required if you are deploying the appliance on an ESXi host or DRS cluster from a vCenter Server inventory. Fill in either this subsection or the 'esxi' subsection.",
              "hostname": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "validate": {
                  "py/function": "config_parser._validate_vc_hostname"
                },
                "__comments": "The IP address or fully qualified domain name (FQDN) of the vCenter Server instance. If an FQDN is provided, it has to be resolvable from the machine that is running the installer."
              },
              "ssl_certificate_verification": {
                "validate": {
                  "py/function": "config_parser._validate_cert_verification_settings"
                },
                "type": {
                  "py/type": "builtins.dict"
                },
                "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
              },
              "port": {
                "required": false,
                "type": {
                  "py/type": "builtins.int"
                },
                "__comments": {
                  "py/tuple": [
                    "The port number of the vCenter Server instance. The default value is %s.",
                    443
                  ]
                }
              },
              "username": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": "The user name of a user with administrative privileges or the Single Sign-On administrator on vCenter."
              },
              "password": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": "The password of a user with administrative privileges or the Single Sign-On administrator on vCenter. If left blank, or omitted, you will be prompted to enter it at the command console during template verification.",
                "password": true
              },
              "deployment_network": {
                "required": false,
                "__comments": "The network of the ESXi host to which to connect the new appliance. When the ESXi host has one network, you can omit this parameter."
              },
              "datacenter": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "__comments": "The path to the datacenter. This path must end with the datacenter's name. If the datacenter has any parent folders, the parent folder names must also be in the path. Parent folders are optional. All names are case-sensitive. Example: \"datacenter\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My Datacenter\"]."
              },
              "target": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "__comments": "The path to a specific cluster, ESXi host, or resource pool under the datacenter specified in the template key \"datacenter\" above. This is where you want to deploy the appliance. This path must end with a cluster name, a ESXi hostname, or a resource pool name. Parent folders are optional. All names are case-sensitive. Examples: For the hierachy 'Parent Folder 1\\Parent Folder 2\\My ESXi', you must specify \"target\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My ESXi\"]. For the hierarchy 'Parent Folder 1\\Parent Folder 2\\My DRS Cluster', you must specify \"target\": [\"Parent Folder 1\", \"Parent Folder 2\", \"My DRS Cluster\"]. If deploying to a resource pool, you must include the item \"Resources\" before the resource pool name. For example, if cluster \"My Cluster\" contains resource pool \"My Resource Pool\", you must specify \"target\": [\"My Cluster\", \"Resources\", \"My Resource Pool\"]. ESXi, cluster, and resource pool names must be the same as the names recorded in the vCenter inventory, i.e. if the name in the vCenter inventory is an IP address, the FQDN cannot be provided here, and vice versa. Use the template key 'vm_folder' if you want the deployed appliance to be listed in a different location within the data center's hierarchy.  Note that prechecks only verify the memory of the resource pool."
              },
              "datastore": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "__comments": {
                  "py/tuple": [
                    "The datastore on which to store the files of the appliance. This value has to be either a specific datastore name, or a specific datastore in a datastore cluster. The datastore must be accessible from the vCenter Server data center and must have at least %s GB of free space. Otherwise, the new appliance might not power on.",
                    25
                  ]
                }
              },
              "vm_folder": {
                "required": false,
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "__comments": "A VM folder in the vCenter Server data center to which to add the appliance."
              }
            },
            "ovftool_arguments": {
              "__comments": "Use this subsection to add arbitrary arguments to the OVF Tool command that the script generates. You do not need to fill it out in most circumstances.",
              "*": {
                "required": false,
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.bool"
                  }
                ],
                "__comments": "Values entered for these keys are passed to OVF Tool without any verification of compatibility with other generated arguments as '--key=value'. Keys that are not arguments recognized by OVF Tool will cause the script to fail.",
                "__title": "<OVF Tool argument name>"
              }
            },
            "sso": {
              "__comments": "Single Sign-On options",
              "password": {
                "required": true,
                "ovf-prop": "guestinfo.cis.vmdir.password",
                "__comments": "You must set the administrator account password for the Embedded Platform Services Controller  instance added to a vCenter Single Sign-On domain. When you add other Embedded PSC instances to the domain, you must provide the password of the  first Embedded PSC instance. The first Embedded PSC instance becomes the replication partner for all subsequent Embedded PSC instances added to the domain. \nPassword must conform to the following requirements:\n    At least 8 characters\n    No more than 20 characters\n    At least 1 uppercase character\n    At least 1 lowercase character\n    At least 1 number\n    At least 1 special character (e.g., '!', '(', '@', etc.)\n    Only visible A-Z, a-z, 0-9 and punctuation (spaces are not allowed)\n",
                "password": true
              },
              "replication_partner_hostname": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "sso",
                      "first_instance"
                    ]
                  }
                ],
                "validate": {
                  "py/function": "install.validate_replication_partner_hostname"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "sso",
                      "first_instance"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.vmdir.replication-partner-hostname",
                "__comments": "The IP address or fully qualified domain name (FQDN) of the Embedded Platform Services Controller replication partner. Ignored, if this instance is the first instance of the identity domain."
              },
              "sso_port": {
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "sso",
                      null
                    ]
                  }
                ],
                "type": {
                  "py/type": "builtins.int"
                },
                "default": 443,
                "__comments": {
                  "py/tuple": [
                    "The SSO port number of an Embedded Platform Services Controller (PSC), defaulting to %s. If your first_instance PSC has changed its SSO port number, you can override the default value with that custom port number.",
                    443
                  ]
                }
              },
              "ssl_certificate_verification": {
                "validate": {
                  "py/function": "config_parser._validate_cert_verification_settings"
                },
                "type": {
                  "py/type": "builtins.dict"
                },
                "__comments": "Supply the SHA-1 thumbprint (fingerprint) of the server's security certificate in the \"thumbprint\" key, e.g. \"thumbprint\": \"CA:FE:18:99:11:22:33:44:55:A2:29:FC:59:47:7C:AB:CD:AB:AA:99\", or add the key-value pair \"verification_mode\": \"NONE\" to skip certificate verification for this server. Note that your server's thumbprint will be different from the example. The only value acceptable for \"verification_mode\" is \"NONE\" (case-sensitive), and \"thumbprint\" and \"verification_mode\" are mutually exclusive."
              },
              "domain_name": {
                "required": true,
                "validate": {
                  "py/function": "config_parser.validate_sso_domain"
                },
                "default": "vsphere.local",
                "ovf-prop": "guestinfo.cis.vmdir.domain-name",
                "__comments": "vCenter Single Sign-On domain name, for example \"vsphere.local\"."
              },
              "first_instance": {
                "required": false,
                "type": {
                  "py/type": "builtins.bool"
                },
                "default": true,
                "ovf-prop": "guestinfo.cis.vmdir.first-instance",
                "__comments": "Specifies whether you are deploying the first Embedded Platform Services Controller in the domain. To create a new vCenter Single Sign-On domain, set the value to 'true'. To join a replication partner to an existing vCenter Single Sign-On domain, set the value to 'false'."
              }
            },
            "network": {
              "__comments": "This subsection describes the network settings of the new appliance.",
              "ip_family": {
                "required": false,
                "type": {
                  "py/type": "config_parser.IpEnum"
                },
                "default": "ipv4",
                "validate": {
                  "py/function": "config_parser.validate_ip_family"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      null,
                      null
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.addr.family",
                "__comments": "Network IP address family."
              },
              "mode": {
                "required": true,
                "type": {
                  "py/type": "config_parser.NetworkModeEnum"
                },
                "ovf-prop": "guestinfo.cis.appliance.net.mode",
                "__comments": "Network mode. Use this parameter to select how to allocate the IP address of the appliance."
              },
              "ip": {
                "required": {
                  "py/function": "config_parser._network_is_static"
                },
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "normalize": {
                  "py/function": "utils.base.detect_and_remove_ipv6_brackets"
                },
                "validate": {
                  "py/function": "config_parser.validate_ip"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "ip_family"
                    ]
                  },
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  },
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "dns_servers"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.addr",
                "__comments": "Network IP address. Required only if the mode is \"static\". Can be IPv4 or IPv6 based on the specified address family."
              },
              "prefix": {
                "required": {
                  "py/function": "config_parser._network_is_static"
                },
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "validate": {
                  "py/function": "config_parser.validate_prefix"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "ip_family"
                    ]
                  },
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.prefix",
                "__comments": "Network prefix length. Use only when the mode is 'static'. Remove if the mode is 'dhcp'. This is the number of bits set in the subnet mask; for instance, if the subnet mask is 255.255.255.0, there are 24 bits in the binary version of the subnet mask, so the prefix length is 24. If used, the values must be in the inclusive range of 0 to 32 for IPv4 and 0 to 128 for IPv6."
              },
              "gateway": {
                "required": {
                  "py/function": "config_parser._network_is_static"
                },
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "normalize": {
                  "py/function": "config_parser.normalize_gateway"
                },
                "validate": {
                  "py/function": "config_parser.validate_gateway"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "ip_family"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.gateway",
                "__comments": "The IP address of the default gateway. Can be \"default\" when using IPv6."
              },
              "system_name": {
                "required": false,
                "validate": {
                  "py/function": "config_parser._is_valid_system_name"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.pnid",
                "__comments": "Primary network identity. Can be either an IP address or a fully qualified domain name (FQDN). Not supported if the network mode is DHCP, but optional if the network mode is static."
              },
              "dns_servers": {
                "required": false,
                "type": [
                  {
                    "py/type": "builtins.str"
                  },
                  {
                    "py/type": "builtins.list"
                  }
                ],
                "normalize": {
                  "py/function": "config_parser.serialize_array_string"
                },
                "validate": {
                  "py/function": "config_parser.validate_dns_servers"
                },
                "validate_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "ip_family"
                    ]
                  },
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "network",
                      "mode"
                    ]
                  }
                ],
                "ovf-prop": "guestinfo.cis.appliance.net.dns.servers",
                "__comments": "A comma-separated list of IP addresses of DNS servers. Can be a JSON array such as [\"1.2.3.4\", \"127.0.0.1\"] or a serialized string such as \"1.2.3.4,127.0.0.1\". This key is optional."
              },
              "ports": {
                "required": false,
                "validate": {
                  "py/function": "install.validate_port_mapping"
                },
                "type": {
                  "py/type": "builtins.dict"
                },
                "ovf-prop": "guestinfo.cis.appliance.net.ports",
                "__comments": "Port numbers on which the vCenter Server Appliance communicates with the other vSphere components. The input must be a dictionary: \"ports\": {\"rhttpproxy.ext.port2\":\"13443\", \"rhttpproxy.ext.port1\":\"7441\"}. You can customize the following ports: rhttpproxy.ext.port1\nrhttpproxy.ext.port2."
              }
            }
          },
          "ceip": {
            "__comments": "VMware Customer Experience Improvement Program (CEIP)",
            "description": {
              "__comments": "This product participates in VMware's Customer Experience\nImprovement Program ('CEIP'). Details regarding the data\ncollected through CEIP and the purposes for which it is used\nby VMware are set forth at the Trust & Assurance Center at\nhttp://www.vmware.com/trustvmware/ceip.html. To join\nthe CEIP for this product, in the template, set\n'ceip_enabled': true. To leave the CEIP for this product, set\n'ceip_enabled': false. Please confirm your acknowledgement\nby passing in the parameter --acknowledge-ceip in the\ncommand line.\n"
            },
            "settings": {
              "__comments": "CEIP participation options",
              "ceip_enabled": {
                "required": {
                  "py/function": "config_parser.is_ceip_required"
                },
                "required_args": [
                  {
                    "py/tuple": [
                      "new_vcsa",
                      "appliance",
                      "deployment_option"
                    ]
                  }
                ],
                "type": {
                  "py/type": "builtins.bool"
                },
                "ovf-prop": "guestinfo.cis.ceip_enabled",
                "__comments": "This key describes the enabling option for the VMware's Customer Experience Improvement Program (CEIP). By default we have 'ceip_enabled': true, which indicates that you are joining CEIP. If you prefer not to participate in the VMware's CEIP for this product, you must disable CEIP by setting 'ceip_enabled': false. You may join or leave VMware's CEIP for this product at any time."
              }
            }
          },
          "__comments": "List of the JSON parameters that you can use to prepare templates for deployment of embedded and external instances of the VCSA {'version': '8.0.2.00000'}."
        },
        "action": "install",
        "_user_data": {
          "py/object": "collections.defaultdict",
          "__version": "2.13.0",
          "new_vcsa": {
            "esxi": {
              "hostname": "ce01esx01.dev.deu.local",
              "username": "root",
              "password": "******",
              "deployment_network": "VM Network",
              "datastore": "datastore1",
              "port": 443
            },
            "appliance": {
              "thin_disk_mode": true,
              "deployment_option": "tiny",
              "name": "DEV_DEU_CE01VCSA01",
              "ovftool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool"
            },
            "network": {
              "ip_family": "ipv4",
              "mode": "static",
              "system_name": "ce01vcsa01.dev.deu.local",
              "ip": "10.33.0.47",
              "prefix": "24",
              "gateway": "10.33.0.254",
              "dns_servers": "10.33.15.1,10.33.15.2"
            },
            "os": {
              "password": "******",
              "ssh_enable": true,
              "ntp_servers": "10.32.10.1,10.32.10.2"
            },
            "sso": {
              "password": "******",
              "domain_name": "vsphere.local",
              "first_instance": true,
              "sso_port": 443
            }
          },
          "ceip": {
            "description": {},
            "settings": {
              "ceip_enabled": false
            }
          },
          "default_factory": {
            "py/object": "jsonpickle.handlers.CloneFactory",
            "exemplar": {
              "py/object": "collections.defaultdict",
              "default_factory": {
                "py/object": "jsonpickle.handlers.CloneFactory",
                "exemplar": {
                  "py/object": "collections.defaultdict",
                  "default_factory": {
                    "py/object": "jsonpickle.handlers.CloneFactory",
                    "exemplar": null
                  }
                }
              }
            }
          }
        },
        "repeated_keys": {
          "py/set": []
        },
        "template_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json",
        "host": "ce01esx01.dev.deu.local",
        "port": 443,
        "datastore": "datastore1",
        "username": "root",
        "password": "******",
        "deployment_network": "VM Network",
        "vm_folder": null,
        "target_path": [],
        "deployment_path": "",
        "vcsa_cluster": null,
        "datacenter": null,
        "cluster": null,
        "compression_only": null,
        "deduplication_and_compression": null,
        "enable_vlcm": null,
        "cache_disk": null,
        "capacity_disk": null,
        "enable_vsan_esa": null,
        "single_tier": null,
        "vsan_hcl_database_path": null,
        "host_cert_thumbprint": null,
        "skip_host_cert_verification": false,
        "image_url_cert_thumbprint": null,
        "skip_image_url_cert_verification": false,
        "deploying_to_resource_pool": false,
        "vum_hostname": null,
        "source": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/VMware-vCenter-Server-Appliance-8.0.2.00100-22617221_OVF10.ova",
        "ovftool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
        "deployment_option": "tiny",
        "is_vmc": false,
        "appliance_name": "DEV_DEU_CE01VCSA01",
        "is_thin_disk": true,
        "ssh_enable": true,
        "is_sso_first_instance": true,
        "sso_host": null,
        "sso_domain": "vsphere.local",
        "infrastructure_node": null,
        "sso_password": "******",
        "root_password": "******",
        "_extra_ovf_params": {
          "guestinfo.cis.system.vm0.port": {
            "password": false,
            "value": 443
          }
        },
        "is_ceip_enabled": false,
        "ovaDeploymentOptionsValues": {
          "py/object": "cli_ova.ova_layout_info.OvaLayoutInfo",
          "option_count": 15
        },
        "sso_ad_domain": null,
        "sso_ad_username": null,
        "sso_ad_password": null,
        "sso_ou": null,
        "ip_family": "ipv4",
        "network_mode": "static",
        "ip_address": "10.33.0.47",
        "network_prefix": "24",
        "gateway": "10.33.0.254",
        "net_ports": null,
        "dns_servers": "10.33.15.1,10.33.15.2",
        "system_name": "ce01vcsa01.dev.deu.local",
        "replication_node": null,
        "sso_port": 443,
        "sso_cert_thumbprint": null,
        "skip_sso_cert_verification": false
      },
      "version_min_target_esx_version": "6.5.0",
      "version_min_target_vc_version": "6.5.0",
      "version_min_target_vcsa_cluster_esx_version": "7.0.2",
      "swap_file_size": 14,
      "datastore_freespace": 120.34,
      "cli_arg_sub_command": "install",
      "cli_installer_log_file": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/vcsa-cli-installer.log",
      "cli_arg_precheck_only": false,
      "cli_arg_no_ssl_certificate_verification": true,
      "template_list": [
        "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json"
      ],
      "template_format": "json",
      "operation": "install",
      "template_type": "EMBEDDED",
      "deployment_path": "",
      "deployment_type": "embedded",
      "ova_package_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/VMware-vCenter-Server-Appliance-8.0.2.00100-22617221_OVF10.ova",
      "ovf_tool_path": "/Users/johanneshorn/Documents/VMware/vcsa-cli-installer/mac/../../vcsa/ovftool/mac/ovftool",
      "template_newvc_ovftool_arguments": {},
      "service_install_monitoring_timeout": 2400,
      "template_newvc_appliance_deployment_option": "tiny",
      "is_vmc": false,
      "template_newvc_appliance_name": "DEV_DEU_CE01VCSA01",
      "template_newvc_appliance_thin_disk_mode": true,
      "template_newvc_os_root_password": "******",
      "template_newvc_os_ssh_enabled": true,
      "sso_host": null,
      "template_newvc_sso_domain_name": "vsphere.local",
      "template_newvc_sso_password": "******",
      "template_newvc_esxi_datastore": "datastore1",
      "template_newvc_host_deployment_network": "VM Network",
      "template_newvc_host_hostname": "ce01esx01.dev.deu.local",
      "template_newvc_host_password": "******",
      "template_newvc_host_port": 443,
      "template_newvc_host_target": {
        "py/id": 125
      },
      "template_newvc_host_type": "esxi",
      "template_newvc_host_username": "root",
      "template_newvc_host_datastore": "datastore1",
      "template_newvc_vc_datacenter": null,
      "template_newvc_host_cert_thumbprint": null,
      "template_newvc_host_cert_verification": false,
      "template_image_url_cert_thumbprint": null,
      "template_skip_image_url_cert_verification": false,
      "template_newvc_is_vc_deploy_mode": false,
      "template_newvc_host_vm_folder": null,
      "template_ceip_settings_ceip_enabled": false,
      "template_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/embedded_vCSA_on_ESXi.json",
      "operation_id": null,
      "workflow_logger_name": "vCSACliInstallLogger",
      "deploying_to_resource_pool": false,
      "use_new_monitoring_task": true,
      "ovftool_auto_config": true,
      "cli_arg_supported_deployment_sizes": false,
      "cli_arg_template_help": false,
      "cli_arg_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files",
      "cli_arg_skip_precheck": false,
      "cli_arg_accept_eula": true,
      "cli_arg_acknowledge_ceip": true,
      "cli_arg_pause_on_warnings": false,
      "cli_arg_operation_id": null,
      "cli_arg_verbose": false,
      "cli_arg_terse": false,
      "cli_arg_verify_template_only": false,
      "cli_arg_allow_vmc_sku": false,
      "cli_arg_template": {
        "py/id": 129
      },
      "cli_arg_precheck_rpm_path": null,
      "taskflow_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi",
      "workflow_log_dir": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146",
      "target_host_type": "esxi",
      "appliance_deploy_task_started": true,
      "all_appliance_ip_address": [
        "10.33.0.47"
      ],
      "appliance_ip_address": "10.33.0.47",
      "newvc_system_name": "ce01vcsa01.dev.deu.local"
    },
    "json_file_path": "/Users/johanneshorn/Git/MB_workspace/vsphere_3_tier/vcenter_installation/files/workflow_1701424887146/embedded_vCSA_on_ESXi/blackboard.json",
    "maskables_dict": {
      "password": "******",
      "passwd": "******",
      "key": "******"
    }
  }
}